group 'java-unit-test-training-example'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "com.palantir:jacoco-coverage:0.4.0"
        classpath 'com.puppycrawl.tools:checkstyle:7.1.2'
    }
}

project(":") {
    repositories {
        mavenCentral()
        jcenter()
    }

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: "jacoco"
    apply plugin: 'com.palantir.jacoco-coverage'
    apply plugin: 'checkstyle'

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.16.18'
    }

    dependencies {
        testCompile "junit:junit:4.12"
        testCompile "org.hamcrest:hamcrest-all:1.3"
        testCompile "org.easymock:easymock:3.5.1"
        testCompile "org.mockito:mockito-core:1.10.19"
        testCompile "org.powermock:powermock-api-mockito:1.6.5"
        testCompile "org.powermock:powermock-api-easymock:1.6.5"
        testCompile "org.powermock:powermock-module-junit4:1.6.5"
        testCompile 'io.rest-assured:rest-assured:3.0.6'
        testCompile 'com.google.code.gson:gson:2.8.2'
    }


    test {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            html.destination file("${buildDir}/jacocoHtml")
        }
    }

    jacocoCoverage {
        // Minimum average coverage of 50% in current project
        reportThreshold 0.5
    }

//    tasks.withType(Checkstyle) {
//        reports {
//            xml.enabled false
//            html.enabled true
//            html.stylesheet resources.text.fromFile('config/checkstyle/google_checks.xml')
//        }
//    }
}

